{"version":3,"sources":["components/PlayersGame.module.css","components/HostScreen.module.css","components/HostsGame.module.css","components/HostNav.module.css","components/StartButton.module.css","components/GenericButton.module.css","components/StartScreen.module.css","components/JoinScreen.module.css","components/AnswerCheck.js","components/StartButton.js","components/HostAskQuestion.js","components/Timer.js","components/LeaderBoard.js","components/GenericButton.js","components/HostNav.js","components/HostsGame.js","components/PlayersGame.js","components/CreateNameScreen.js","logic/api.js","components/NumberPad.js","components/NumberDisplay.js","components/JoinScreen.js","components/HostScreen.js","components/StartScreen.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AnswerCheck","props","className","styles","answer","RightWrongButtons","onClick","handleAnswer","role","aria-label","StartButton","handleClick","text","HostAskQuestion","style","userSelect","questionNumber","htmlFor","fontSize","TimeLimitInput","name","type","min","onChange","e","setTimeLimit","target","value","setTimeLeft","defaultValue","timeLimit","allowAnswers","Timer","timeLeft","NameList","buzzes","LeaderBoard","useState","x","y","pos","setPos","boardRef","useRef","leaders","leaderBoard","map","player","key","Math","floor","random","ref","draggable","onDragEnd","clientX","clientY","top","left","closer","close","GenericButton","genericButt","HostNav","gameCode","useContext","UserContext","EndButton","endGame","setShowLeaderBoard","questionTime","goToNext","showAnswerCheck","showTimer","skipQuestion","exit","HostsGame","setAnswer","setPlayerUnderReview","setQuestionTime","setShowTimer","showSadFace","setShowSadFace","timerStartTime","setTimerStartTime","setQuestionNumber","setShowAnswerCheck","goodJob","setGoodJob","ohNo","setOhNo","showLeaderBoard","loopy","Date","now","secs","requestAnimationFrame","toPlayersCheckingAnswers","useEffect","length","points","removeArr","plyer","shift","setBuzzes","sock","emit","showOhNo","failSound","play","showGoodJob","successSound","setTimeout","buzz","NameButton","playersAnswer","console","log","beginHost","GoodJob","borderRadius","alt","src","PlayersGame","waitForQuestion","setWaitForQuestion","setPlayersAnswer","allowingAnswers","setAllowingAnswers","afterAnswer","setAfterAnswer","whileCheckingAnswers","setWhileCheckingAnswers","answerInput","on","current","focus","Answering","placeholder","BuzzButton","WaitForQuestion","width","CreateNameScreen","theInput","display","onSubmit","joinWithName","updateName","NameInput","maxLength","apiGet","path","a","fetch","res","json","data","alert","apiPost","object","options","method","body","JSON","stringify","headers","NumberPad","numClick","num","parseInt","innerText","enteredCode","setEnteredCode","nanClick","join","rm","slice","NumberDisplay","JoinScreen","userName","setUserName","createNameScreen","setCreateNameScreen","waitScreen","setWaitScreen","code","ok","setJoinedGame","preventDefault","setPlayerName","setGameCode","joinRoom","msg","goBack","WaitForGameAfterJoin","HostScreen","playersList","el","marginRight","CodeDisplay","PlayersList","StartScreen","createGame","io","React","createContext","App","gameObject","setGameObject","startScreen","setStartScreen","joinScreen","setJoinScreen","hostScreen","setHostScreen","joinedGame","playerName","hostGamePlayers","setHostGamePlayers","setPlayersList","showHostsGame","setShowHostsGame","showPlayersGame","setShowPlayersGame","buzzName","setBuzzName","setLeaderBoard","bgm","setBgm","setSuccessSound","setFailSound","canvas","obj","arr","i","players","push","game","s","addCanvas","window","innerWidth","innerHeight","onResize","resize","listenForKeyboard","listenForMouse","listenForTouch","stillCanvas","Sound","whileLoading","percentLoaded","loop","sort","b","reverse","includes","loadAudio","gameNumber","cancel","stopPropagation","onDragEnter","onDragOver","Provider","hostGoToNextQuestion","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.cbe9754f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"PlayersGame\":\"PlayersGame_PlayersGame__3XN8S\",\"Answering\":\"PlayersGame_Answering__3B4Kk\",\"BuzzButton\":\"PlayersGame_BuzzButton__2xJ_G\",\"WaitForQuestion\":\"PlayersGame_WaitForQuestion__1P6LZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HostScreen\":\"HostScreen_HostScreen__2cMzp\",\"CodeDisplay\":\"HostScreen_CodeDisplay__2RKXA\",\"PlayersList\":\"HostScreen_PlayersList__2tAi-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HostsGame\":\"HostsGame_HostsGame__7yLPM\",\"NameButton\":\"HostsGame_NameButton__3zfE0\",\"AnswerCheck\":\"HostsGame_AnswerCheck__3W-U9\",\"slidein\":\"HostsGame_slidein__3sBdz\",\"fontgrow\":\"HostsGame_fontgrow__1RhVV\",\"RightWrongButtons\":\"HostsGame_RightWrongButtons__2n5Ja\",\"TimeLimitInput\":\"HostsGame_TimeLimitInput__1otnk\",\"Timer\":\"HostsGame_Timer__323aG\",\"NameList\":\"HostsGame_NameList__31of2\",\"GoodJob\":\"HostsGame_GoodJob__3IwFM\",\"LeaderBoard\":\"HostsGame_LeaderBoard__P5Ttn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HostNav\":\"HostNav_HostNav__17Z_h\",\"EndButton\":\"HostNav_EndButton__-lbC4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"StartButton\":\"StartButton_StartButton__1O8aZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"genericButt\":\"GenericButton_genericButt__ju7Mb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"StartScreen\":\"StartScreen_StartScreen__2YFVK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"JoinScreen\":\"JoinScreen_JoinScreen__Qcczc\",\"NumberDisplay\":\"JoinScreen_NumberDisplay__2L9EC\",\"NumberPad\":\"JoinScreen_NumberPad__1s5_A\",\"NameInput\":\"JoinScreen_NameInput__o28uR\"};","import React from 'react';\nimport styles from './HostsGame.module.css';\n\nexport default function AnswerCheck(props) {\n  return (\n    <div className={styles.AnswerCheck}>\n      <h1>{props.answer}</h1>\n      <div className={styles.RightWrongButtons}>\n        <button\n          onClick={() => {\n            props.handleAnswer(1);\n          }}\n        >\n          <span role=\"img\" aria-label=\"CORRECT\">\n            🙆‍♀️\n          </span>\n        </button>\n        <button\n          onClick={() => {\n            props.handleAnswer(-1);\n          }}\n        >\n          <span role=\"img\" aria-label=\"WRONG\">\n            🙅‍♀️\n          </span>\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport styles from './StartButton.module.css';\n\nexport default function StartButton(props) {\n  return (\n    <button className={styles.StartButton} onClick={props.handleClick}>\n      {props.text}\n    </button>\n  );\n}\n","import React from 'react';\nimport StartButton from './StartButton';\nimport styles from './HostsGame.module.css';\n\nexport default function HostAskQuestion(props) {\n  const handleChange = (e) => {\n    props.setTimeLimit(e.target.value);\n    props.setTimeLeft(e.target.value);\n  };\n  return (\n    <div>\n      <h1 style={{ userSelect: 'none' }}>Question number: {props.questionNumber}</h1>\n      <label htmlFor=\"time-limit-input\" style={{ fontSize: '22px', userSelect: 'none' }}>\n        Time limit: &nbsp;\n      </label>\n      <input\n        className={styles.TimeLimitInput}\n        name=\"time-limit-input\"\n        type=\"number\"\n        min=\"5\"\n        onChange={handleChange}\n        defaultValue={props.timeLimit}\n      ></input>\n      <StartButton handleClick={props.allowAnswers} text={'✨Get Answers✨'} />\n    </div>\n  );\n}\n","import React from 'react';\nimport styles from './HostsGame.module.css';\n\nexport default function Timer(props) {\n  return (\n    <div>\n      <div className={styles.Timer}>\n        <h1>Time remaining:&nbsp;</h1>\n        <span>{props.timeLeft}</span>\n      </div>\n      <ol className={styles.NameList}>{props.buzzes}</ol>\n    </div>\n  );\n}\n","import React, { useRef, useState } from 'react';\nimport styles from './HostsGame.module.css';\n\nexport default function LeaderBoard(props) {\n  const [pos, setPos] = useState({ x: null, y: null });\n  const boardRef = useRef();\n  const leaders = props.leaderBoard.map((player) => {\n    return <li key={`${player}${Math.floor(Math.random())}`}>{player}</li>;\n  });\n  const handleDragEnd = (e) => {\n    setPos({ x: e.clientX, y: e.clientY });\n  };\n  return (\n    <div\n      ref={boardRef}\n      draggable\n      className={styles.LeaderBoard}\n      onDragEnd={handleDragEnd}\n      style={{ top: `${pos.y}px`, left: `${pos.x}px` }}\n    >\n      <button className={styles.closer} onClick={props.close}>\n        ×\n      </button>\n      <h2>Leaders</h2>\n      <ul>{leaders}</ul>\n    </div>\n  );\n}\n","import React from 'react';\nimport styles from './GenericButton.module.css';\n\nexport default function GenericButton(props) {\n  const handleClick = () => {\n    props.handleClick();\n  };\n  return (\n    <button className={styles.genericButt} onClick={handleClick}>\n      {props.text}\n    </button>\n  );\n}\n","import React, { useContext } from 'react';\nimport UserContext from '../App';\nimport styles from './HostNav.module.css';\nimport GenericButton from './GenericButton';\n\nexport default function HostNav(props) {\n  const gameCode = useContext(UserContext);\n  return (\n    <nav className={styles.HostNav}>\n      <button\n        className={styles.EndButton}\n        onClick={() => {\n          props.endGame(gameCode);\n        }}\n      >\n        END GAME\n      </button>\n      <GenericButton\n        text={'Show leader board🥊'}\n        handleClick={() => {\n          props.setShowLeaderBoard(true);\n        }}\n      />\n      {props.questionTime && <GenericButton text={'Next question✨'} handleClick={props.goToNext} />}\n      {props.showAnswerCheck && <GenericButton text={'Next question✨'} handleClick={props.goToNext} />}\n      {props.showTimer && <GenericButton text={'Skip✨'} handleClick={props.skipQuestion} />}\n    </nav>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport AnswerCheck from './AnswerCheck';\nimport HostAskQuestion from './HostAskQuestion';\nimport Timer from './Timer';\nimport LeaderBoard from './LeaderBoard';\nimport styles from './HostsGame.module.css';\nimport HostNav from './HostNav';\nimport { sock } from '../App';\n\nlet exit = 0;\nexport default function HostsGame(props) {\n  const [answer, setAnswer] = useState(null);\n  const [playerUnderReview, setPlayerUnderReview] = useState(null);\n  const [questionTime, setQuestionTime] = useState(true);\n  const [timeLimit, setTimeLimit] = useState(30);\n  const [timeLeft, setTimeLeft] = useState(30);\n  const [showTimer, setShowTimer] = useState(false);\n  const [showSadFace, setShowSadFace] = useState(false);\n  const [timerStartTime, setTimerStartTime] = useState(0);\n  const [questionNumber, setQuestionNumber] = useState(1);\n  const [showAnswerCheck, setShowAnswerCheck] = useState(false);\n  const [goodJob, setGoodJob] = useState(false);\n  const [ohNo, setOhNo] = useState(false);\n  const [showLeaderBoard, setShowLeaderBoard] = useState(false);\n\n  useEffect(() => {\n    showTimer && loopy();\n  }, [timerStartTime]);\n\n  useEffect(() => {\n    if (timeLeft === 0) {\n      setTimeLeft(timeLimit);\n    }\n  }, [timeLeft]);\n  useEffect(() => {\n    if (showAnswerCheck && props.buzzes.length === 0) {\n      setShowSadFace(true);\n    }\n  }, [showAnswerCheck]);\n\n  function loopy() {\n    if (Date.now() - timerStartTime + 900 < timeLimit * 1000 && !exit) {\n      let secs = Math.floor((timeLimit * 1000 - (Date.now() - timerStartTime)) * 0.001);\n      setTimeLeft(secs);\n      requestAnimationFrame(loopy);\n    } else {\n      setShowTimer(false);\n      setShowAnswerCheck(true);\n      toPlayersCheckingAnswers();\n      exit = 0;\n    }\n  }\n  const startTimer = () => {\n    setShowTimer(true);\n    setTimerStartTime(Date.now());\n  };\n\n  const handleNameClick = (playersAnswer, name) => {\n    setAnswer(playersAnswer);\n    setPlayerUnderReview(name);\n    console.log(playersAnswer);\n    if (showTimer) {\n      exit = 1;\n      setShowAnswerCheck(true);\n      setTimeLeft(0);\n      setShowTimer(false);\n      setQuestionTime(false);\n      toPlayersCheckingAnswers();\n    }\n  };\n\n  const handleAnswer = (points) => {\n    const removeArr = [...props.buzzes];\n    const plyer = removeArr.shift();\n    props.setBuzzes(removeArr);\n    setAnswer(null);\n    sock.emit('givePoints', props.gameCode, plyer, points);\n    if (points < 0) {\n      showOhNo();\n      props.failSound.play();\n    } else {\n      showGoodJob();\n      props.successSound.play();\n    }\n  };\n\n  const allowAnswers = () => {\n    exit = 0;\n    setQuestionTime(false);\n    props.allowAnswers();\n    props.beginHost();\n    setTimeLeft(timeLimit);\n    startTimer();\n  };\n  const goToNext = () => {\n    exit = 1;\n    setQuestionNumber(questionNumber + 1);\n    props.setBuzzes([]);\n    setTimeLeft(0);\n    setShowTimer(false);\n    setQuestionTime(true);\n    setShowAnswerCheck(false);\n    setAnswer(null);\n    setShowSadFace(false);\n    sock.emit('goToNext', props.gameCode);\n  };\n  const skipQuestion = () => {\n    exit = 1;\n    setShowAnswerCheck(true);\n    setTimeLeft(0);\n    setShowTimer(false);\n    setQuestionTime(false);\n    toPlayersCheckingAnswers();\n  };\n  const toPlayersCheckingAnswers = () => {\n    sock.emit('checkingAnswers', props.gameCode);\n  };\n  const showGoodJob = () => {\n    setGoodJob(true);\n    setTimeout(() => {\n      setGoodJob(false);\n    }, 1500);\n  };\n  const showOhNo = () => {\n    setOhNo(true);\n    setTimeout(() => {\n      setOhNo(false);\n    }, 1500);\n  };\n  const buzzes = props.buzzes.map((buzz) => {\n    return (\n      <li key={buzz.name}>\n        <button\n          className={styles.NameButton}\n          onClick={() => {\n            handleNameClick(buzz.answer, buzz.name);\n          }}\n        >\n          {buzz.name}\n        </button>\n      </li>\n    );\n  });\n  const closeBoard = () => {\n    setShowLeaderBoard(false);\n  };\n\n  return (\n    <div className={styles.HostsGame}>\n      <HostNav\n        endGame={props.endGame}\n        goToNext={goToNext}\n        setShowLeaderBoard={setShowLeaderBoard}\n        skipQuestion={skipQuestion}\n        questionTime={questionTime}\n        showAnswerCheck={showAnswerCheck}\n        showTimer={showTimer}\n      />\n      {questionTime && (\n        <HostAskQuestion\n          questionNumber={questionNumber}\n          allowAnswers={allowAnswers}\n          timeLimit={timeLimit}\n          setTimeLeft={setTimeLeft}\n          setTimeLimit={setTimeLimit}\n        />\n      )}\n      {showTimer && <Timer timeLeft={timeLeft} buzzes={buzzes} />}\n      {answer && <AnswerCheck answer={answer} handleAnswer={handleAnswer} />}\n      {answer === '' && <AnswerCheck answer={answer} handleAnswer={handleAnswer} />}\n      {showAnswerCheck && props.buzzes.length > 0 && <ol>{buzzes}</ol>}\n      {showAnswerCheck && showSadFace && (\n        <div>\n          <h1>\n            Nobody answered!\n            <span role=\"img\" aria-label=\"\">\n              😭\n            </span>\n          </h1>\n        </div>\n      )}\n      {goodJob && (\n        <div className={styles.GoodJob}>\n          <img style={{ borderRadius: '10px' }} alt=\"Good job!\" src=\"images/goodjob.gif\"></img>\n        </div>\n      )}\n      {ohNo && (\n        <div className={styles.GoodJob}>\n          <img style={{ borderRadius: '10px' }} alt=\"Oh no!\" src=\"images/ohno.gif\"></img>\n        </div>\n      )}\n      {showLeaderBoard && <LeaderBoard leaderBoard={props.leaderBoard} close={closeBoard} />}\n    </div>\n  );\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport { sock } from '../App';\nimport styles from './PlayersGame.module.css';\nexport default function PlayersGame(props) {\n  const [waitForQuestion, setWaitForQuestion] = useState(true);\n  const [playersAnswer, setPlayersAnswer] = useState('');\n  const [allowingAnswers, setAllowingAnswers] = useState(false);\n  const [afterAnswer, setAfterAnswer] = useState(false);\n  const [whileCheckingAnswers, setWhileCheckingAnswers] = useState(false);\n\n  const answerInput = useRef(null);\n\n  useEffect(() => {\n    sock.on('goToNext', () => {\n      console.log('go to next');\n      setWaitForQuestion(true);\n      setAfterAnswer(false);\n      setAllowingAnswers(false);\n      setWhileCheckingAnswers(false);\n    });\n    sock.on('allowAnswers', () => {\n      console.log('allow answers');\n      setAllowingAnswers(true);\n      setAfterAnswer(false);\n      setWhileCheckingAnswers(false);\n      console.log('You may answer now');\n      setWaitForQuestion(false);\n    });\n    sock.on('checkingAnswers', () => {\n      console.log('check answers');\n      setWhileCheckingAnswers(true);\n      setAfterAnswer(false);\n      setAllowingAnswers(false);\n      setWaitForQuestion(false);\n    });\n  }, []);\n  useEffect(() => {\n    allowingAnswers && !afterAnswer && answerInput.current.focus();\n  });\n\n  const handleChange = (e) => {\n    setPlayersAnswer(e.target.value);\n  };\n\n  return (\n    <div className={styles.PlayersGame}>\n      {allowingAnswers && !afterAnswer && (\n        <div className={styles.Answering}>\n          <textarea ref={answerInput} placeholder=\"Type your answer here. ✨\" onChange={handleChange}></textarea>\n          <BuzzButton\n            buzz={() => {\n              props.buzz(playersAnswer);\n              setAfterAnswer(true);\n            }}\n          />\n        </div>\n      )}\n      {waitForQuestion && (\n        <div className={styles.WaitForQuestion}>\n          <h1>\n            Listen carefully to the question!{' '}\n            <span role=\"img\" aria-label=\"LISTEN!\">\n              👂\n            </span>\n          </h1>\n          <img alt=\"👂👂👂👂👂👂👂👂👂👂\" src=\"/images/listen.gif\"></img>\n        </div>\n      )}\n      {afterAnswer && <img alt=\"One moment please...✨\" src=\"/images/waiting.gif\" style={{ width: '50vh' }}></img>}\n      {whileCheckingAnswers && (\n        <img style={{ width: '50vw' }} src=\"/images/anticipation.gif\" alt=\"Checking the answers...💖🌈\"></img>\n      )}\n    </div>\n  );\n}\n\nfunction BuzzButton(props) {\n  return (\n    <button onClick={props.buzz} className={styles.BuzzButton}>\n      BUZZ\n    </button>\n  );\n}\n","import React, { useRef, useEffect } from 'react';\nimport GenericButton from './GenericButton';\nimport styles from './JoinScreen.module.css';\n\nexport default function CreateNameScreen(props) {\n  const theInput = useRef();\n  useEffect(() => {\n    theInput.current.focus();\n  }, [theInput]);\n  return (\n    <div style={{ display: 'flex' }}>\n      <form onSubmit={props.joinWithName}>\n        <input ref={theInput} onChange={props.updateName} className={styles.NameInput} maxLength=\"15\"></input>\n      </form>\n      <GenericButton text={'Join'} handleClick={props.joinWithName} />\n    </div>\n  );\n}\n","const apiGet = async (path) => {\n  try {\n    const res = await fetch(path);\n    const data = await res.json();\n    return data;\n  } catch (err) {\n    alert(err);\n    return null;\n  }\n};\n\n/**\n *\n * @param {string} path - path to post to\n * @param {Object} object - object literal to post\n */\nconst apiPost = async (path, object) => {\n  try {\n    const options = {\n      method: 'post',\n      body: JSON.stringify(object),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await fetch(path, options);\n    const data = await res.json();\n    return data;\n  } catch (err) {\n    return null;\n  }\n};\n\nexport { apiGet, apiPost };\n","import React from 'react';\nimport styles from './JoinScreen.module.css';\n\nexport default function NumberPad(props) {\n  const numClick = (e) => {\n    let num = parseInt(e.target.innerText);\n    if (props.enteredCode.length < 6) {\n      props.setEnteredCode(`${props.enteredCode}${num}`);\n    }\n  };\n  const nanClick = (e) => {\n    if (e.target.innerText === 'OK') {\n      props.enteredCode.length === 6 ? props.join(props.enteredCode) : alert('You must enter at least 6 numbers❣️✨');\n    } else {\n      let rm = props.enteredCode.slice(0, -1);\n      props.setEnteredCode(rm);\n    }\n  };\n  return (\n    <div className={styles.NumberPad}>\n      <table>\n        <tbody>\n          <tr>\n            <td onClick={numClick}>1</td>\n            <td onClick={numClick}>2</td>\n            <td onClick={numClick}>3</td>\n          </tr>\n          <tr>\n            <td onClick={numClick}>4</td>\n            <td onClick={numClick}>5</td>\n            <td onClick={numClick}>6</td>\n          </tr>\n          <tr>\n            <td onClick={numClick}>7</td>\n            <td onClick={numClick}>8</td>\n            <td onClick={numClick}>9</td>\n          </tr>\n          <tr>\n            <td onClick={nanClick} style={{ fontSize: '4vh' }}>\n              ⬅\n            </td>\n            <td onClick={numClick}>0</td>\n            <td onClick={nanClick} style={{ fontSize: '4vh' }}>\n              OK\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import React from 'react';\nimport styles from './JoinScreen.module.css';\n\nexport default function NumberDisplay(props) {\n  return (\n    <div className={styles.NumberDisplay}>\n      <span>{props.enteredCode[0] ? `${props.enteredCode[0]} ` : '_ '}</span>\n      <span>{props.enteredCode[1] ? `${props.enteredCode[1]} ` : '_ '}</span>\n      <span>{props.enteredCode[2] ? `${props.enteredCode[2]} ` : '_ '}</span>\n      <span>{props.enteredCode[3] ? `${props.enteredCode[3]} ` : '_ '}</span>\n      <span>{props.enteredCode[4] ? `${props.enteredCode[4]} ` : '_ '}</span>\n      <span>{props.enteredCode[5] ? `${props.enteredCode[5]} ` : '_ '}</span>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport GenericButton from './GenericButton';\nimport CreateNameScreen from './CreateNameScreen';\nimport { apiPost } from '../logic/api';\nimport NumberPad from './NumberPad';\nimport NumberDisplay from './NumberDisplay';\nimport styles from './JoinScreen.module.css';\n\nexport default function JoinScreen(props) {\n  const [enteredCode, setEnteredCode] = useState('');\n  const [userName, setUserName] = useState(null);\n  const [createNameScreen, setCreateNameScreen] = useState(false);\n  const [waitScreen, setWaitScreen] = useState(false);\n\n  const updateName = (e) => {\n    setUserName(e.target.value);\n  };\n  const join = async (code) => {\n    const res = await apiPost('/join', { code: code });\n    if (res.ok) {\n      props.setJoinedGame(enteredCode);\n      setCreateNameScreen(true);\n    } else {\n      alert('That game is not currently available 😭');\n    }\n  };\n  const joinWithName = async (e) => {\n    e && e.preventDefault();\n    const res = await apiPost('/add-player', { player: userName, code: enteredCode });\n    console.log(res);\n    if (res.ok) {\n      console.log('It worked!');\n      props.setPlayerName(userName);\n      props.setGameCode(enteredCode);\n      props.joinRoom(enteredCode, userName);\n      setCreateNameScreen(false);\n      setWaitScreen(true);\n    } else {\n      if ((res.msg = 'used')) {\n        alert('Sorry, that name is already used. Please choose a new one❣️✨');\n      } else {\n        alert('Sorry, the game you are trying to play no longer seems to be available. Please try again.✨');\n      }\n    }\n  };\n  return (\n    <div>\n      <GenericButton text={'⏪Back'} handleClick={props.goBack} />\n      <div className={styles.JoinScreen}>\n        <NumberDisplay enteredCode={enteredCode} />\n        {!createNameScreen && !waitScreen && (\n          <NumberPad enteredCode={enteredCode} setEnteredCode={setEnteredCode} join={join} />\n        )}\n        {createNameScreen && <CreateNameScreen updateName={updateName} joinWithName={joinWithName} />}\n        {waitScreen && <WaitForGameAfterJoin />}\n      </div>\n    </div>\n  );\n}\n\nfunction WaitForGameAfterJoin() {\n  return (\n    <div>\n      <img alt=\"Please wait for the game to begin...✨\" src=\"/images/waiting.gif\" style={{ width: '50vh' }}></img>\n    </div>\n  );\n}\n","import React from 'react';\nimport GenericButton from './GenericButton';\nimport StartButton from './StartButton';\nimport styles from './HostScreen.module.css';\n\nexport default function HostScreen(props) {\n  const playersList = props.playersList.map((el) => {\n    return (\n      <span key={el} style={{ marginRight: '16px' }}>\n        &nbsp;⭐️{el}\n      </span>\n    );\n  });\n\n  return (\n    <div>\n      <GenericButton text={'⏪Back'} handleClick={props.goBack} />\n      <div className={styles.HostScreen}>\n        <div className={styles.CodeDisplay}>{props.gameCode}</div>\n        <div className={styles.PlayersList}>{playersList}</div>\n        <StartButton handleClick={props.beginHost} text={'✨START GAME✨'} />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport StartButton from './StartButton';\nimport styles from './StartScreen.module.css';\n\nexport default function StartScreen(props) {\n  return (\n    <div className={styles.StartScreen}>\n      <StartButton text={'✨Host game ✨'} handleClick={props.createGame} />\n      <StartButton text={'✨Join game ✨'} handleClick={props.join} />\n    </div>\n  );\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport HostsGame from './components/HostsGame';\nimport PlayersGame from './components/PlayersGame';\nimport JoinScreen from './components/JoinScreen';\nimport HostScreen from './components/HostScreen';\nimport StartScreen from './components/StartScreen';\nimport { apiGet, apiPost } from './logic/api.js';\nimport './App.css';\nimport s from 's2pd';\nimport io from 'socket.io-client';\n\nconst sock = io('/games');\n\nexport { sock };\n\nexport const UserContext = React.createContext();\n\nfunction App() {\n  const [gameCode, setGameCode] = useState(null);\n  const [gameObject, setGameObject] = useState(null);\n  const [startScreen, setStartScreen] = useState(true);\n  const [joinScreen, setJoinScreen] = useState(false);\n  const [hostScreen, setHostScreen] = useState(false);\n  const [joinedGame, setJoinedGame] = useState(null);\n  const [playerName, setPlayerName] = useState(null);\n  const [hostGamePlayers, setHostGamePlayers] = useState([]); //all player data\n  const [playersList, setPlayersList] = useState([]); // just usernames\n  const [showHostsGame, setShowHostsGame] = useState(false);\n  const [showPlayersGame, setShowPlayersGame] = useState(false);\n  const [buzzName, setBuzzName] = useState(null); // player who most recently buzzed\n  const [buzzes, setBuzzes] = useState([]);\n  const [leaderBoard, setLeaderBoard] = useState([]);\n  const [bgm, setBgm] = useState(null);\n  const [successSound, setSuccessSound] = useState(null);\n  const [failSound, setFailSound] = useState(null);\n\n  const canvas = useRef();\n\n  useEffect(() => {\n    sock.on('newPlayer', (obj) => {\n      const arr = [];\n      for (let i = 0; i < obj.players.length; i++) {\n        arr.push(obj.players[i].name);\n      }\n      setPlayersList(arr);\n      setHostGamePlayers(obj.players);\n    });\n    sock.on('buzz', (name, answer) => {\n      setBuzzName({ name: name, answer: answer });\n      console.log(answer);\n    });\n    sock.on('start', () => {\n      //what to do when host starts a game\n      setShowPlayersGame(true);\n      setStartScreen(false);\n      setHostScreen(false);\n      setJoinScreen(false);\n    });\n    sock.on('gameObjectUpdated', (game) => {\n      setGameObject(game);\n    });\n    s.addCanvas(canvas.current, `${window.innerWidth}`, `${window.innerHeight}`);\n    s.onResize(() => {\n      s.resize(window.innerWidth, window.innerHeight);\n    });\n    s.listenForKeyboard();\n    s.listenForMouse();\n    s.listenForTouch();\n    s.stillCanvas();\n    setBgm(new s.Sound('/sound/bgm.mp3', 0.2, true, 1));\n    setSuccessSound(new s.Sound('/sound/success.mp3', 0.4, false, 1));\n    setFailSound(new s.Sound('/sound/failure.mp3', 0.4, false, 1));\n    s.whileLoading(() => {\n      console.log(s.percentLoaded); // print percent of assets loaded to console while loading.\n    });\n    s.loop(() => {\n      console.log(s.percentLoaded);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (gameObject) {\n      const players = [...gameObject.players];\n      players.sort((a, b) => {\n        return a.points - b.points;\n      });\n      players.reverse();\n      let leaders = [];\n      console.log(players);\n      for (let i = 0; i < players.length; i++) {\n        players[i].points === 1\n          ? leaders.push(`⭐️${players[i].name}: ${players[i].points} point`)\n          : leaders.push(`⭐️${players[i].name}: ${players[i].points} points`);\n      }\n      setLeaderBoard(leaders);\n    }\n  }, [gameObject]);\n\n  useEffect(() => {\n    console.log('leader board: ', leaderBoard);\n  }, [leaderBoard]);\n\n  useEffect(() => {\n    if (buzzName) {\n      if (!buzzes.includes(buzzName.name)) {\n        setBuzzes((buzzes) => [...buzzes, buzzName]); // Push into state!\n      }\n    }\n  }, [buzzName]);\n\n  const joinRoom = (num) => {\n    sock.emit('join', `/${num}`);\n  };\n  const buzz = (answer) => {\n    sock.emit('buzz', playerName, gameCode, answer);\n  };\n  const allowAnswers = () => {\n    sock.emit('allowAnswers', gameCode);\n  };\n  const hostGoToNextQuestion = () => {\n    sock.emit('goToNext', gameCode);\n  };\n\n  const goBack = () => {\n    setStartScreen(true);\n    setHostScreen(false);\n    setJoinScreen(false);\n    if (joinedGame) {\n      endGame(joinedGame);\n      setJoinedGame(null);\n    }\n    if (gameCode) {\n      endGame(gameCode);\n      setGameCode(null);\n    }\n  };\n\n  const createGame = async () => {\n    const res = await apiGet('/create');\n    s.loadAudio();\n    bgm.play();\n    if (res) {\n      setGameCode(res.gameNumber);\n      setStartScreen(false);\n      setJoinScreen(false);\n      setHostScreen(true);\n      console.log(res.gameNumber);\n      joinRoom(res.gameNumber);\n    } else {\n      console.log('error!');\n    }\n  };\n\n  const join = () => {\n    setJoinScreen(true);\n    setHostScreen(false);\n    setStartScreen(false);\n  };\n  const endGame = async (code) => {\n    console.log(code);\n    const res = await apiPost('/create', { code: code });\n    if (res) {\n      console.log(res);\n    } else {\n      console.log('error!');\n    }\n  };\n\n  const beginHost = () => {\n    console.log('HOSTIN');\n    setJoinScreen(false);\n    setHostScreen(false);\n    setStartScreen(false);\n    setShowHostsGame(true);\n    sock.emit('host', gameCode);\n  };\n  const cancel = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    console.log('draggy stuff!');\n  };\n  return (\n    <div className=\"App\" onDragEnter={cancel} onDragOver={cancel}>\n      <canvas ref={canvas}></canvas>\n      <UserContext.Provider value={{ player: playerName, gameCode: gameCode }}>\n        {startScreen && <StartScreen goBack={goBack} createGame={createGame} join={join} />}\n\n        {hostScreen && (\n          <HostScreen goBack={goBack} gameCode={gameCode} playersList={playersList} beginHost={beginHost} />\n        )}\n        {joinScreen && (\n          <JoinScreen\n            goBack={goBack}\n            setJoinedGame={setJoinedGame}\n            setGameCode={setGameCode}\n            setPlayerName={setPlayerName}\n            joinRoom={joinRoom}\n          />\n        )}\n        {showHostsGame && (\n          <HostsGame\n            buzzes={buzzes}\n            setBuzzes={setBuzzes}\n            allowAnswers={allowAnswers}\n            endGame={endGame}\n            beginHost={beginHost}\n            gameCode={gameCode}\n            hostGoToNextQuestion={hostGoToNextQuestion}\n            hostGamePlayers={hostGamePlayers}\n            leaderBoard={leaderBoard}\n            failSound={failSound}\n            successSound={successSound}\n          />\n        )}\n        {showPlayersGame && <PlayersGame buzz={buzz} />}\n      </UserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}